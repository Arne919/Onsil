#study

# num1 = 5
# num2 = 3
# sum_result = num1 + num2
# print(sum_result)

# def get_sum(num1, num2):
#     return num1 + num2
# print(sum_result)

# def greet(name):
#     message = 'Hello, ' + name
#     return message
# result = greet('Alice')
# print(result)

# def make_sum(pram1, pram2):
#     return pram1 + pram2
# result = make_sum(100, 30)
# return_value = print(result) #130
# print(return_value) #None

# def my_func():
#     print('Hello')

# result  = my_func() # hello
# print(result) #None

# def add_number(x, y): # x와 y는 매개변수(parameter)
#     result = x + y
#     return result
# a = 2
# b = 3
# sum_result = add_number(a, b) # a와 b는 인자(argument)
# print(sum_result) # 5 

# def greet(name, age): #위치인자
#     print(f'안녕하세요, {name}님! {age}살이시군요.')
# greet('Alice', 25) #안녕하세요, Alice님! 25살이시군요.
# greet(25, 'Alice') #안녕하세요, 25님! Alice살이시군요.

# def greet(name, age=30): #기본인자값
#     print(f'안녕하세요, {name}님! {age}살이시군요.')
# greet('Bob') #안녕하세요, Bob님! 30살이시군요.
# greet('Charlie', 40) #안녕하세요, Charlie님! 40살이시군요.

# def greet(name, age): #키워드인자
#     print(f'안녕하세요, {name}님! {age}살이시군요.')
# greet(name='Dave', age=35) #안녕하세요, Dave님! 35살이시군요.
# greet(age=35, 'Dave') #error
# greet(age=35, name='Dave') #안녕하세요, Dave님! 35살이시군요.

# def calculate_sum(*args): #임의의 인자 목록
# def calculate_sum(param, *args) #위치인자 맨앞 가능
#     print(args)
#     print(type(args))
#     total = sum(args)
#     print(f'합계: {total}')
# calculate_sum(1,100,5000,30)
# '''
# (1,100,5000,30)
# <class 'tuple'>
# 합계: 5131
# '''

# def print_info(**kwargs): #임의의 키워드 인자 목록
#     print(kwargs)
# print_info(name='Eve', age=30) #{'name': 'Eve', 'age': 30}

# def func(pos1, pos2, default_arg='default', *args, **kwargs):
# #위치인자1-2, 기본인자, 가변인자, 키워드인자
#     print('pos1:', pos1)
#     print('pos2:', pos2)
#     print('default_arg:', default_arg)
#     print('args:', args)
#     print('kwargs:', kwargs)
# func(1,2,3,4,5,6,key1='value1',key2='value2')
# '''
# pos1: 1
# pos2: 2
# default_arg: 3
# args: (4, 5, 6)
# kwargs: {'key1': 'value1', 'key2': 'value2'}
# '''

# def factorial(n):
#     if n == 0: #n=1도 똑같음
#         return 1
#     else:
#         return n * factorial(n - 1)
# print(factorial(5)) #120

# print(list(range(5)))

# numbers = [1,2,3,4,5]
# print(len(numbers))
# print(max(numbers))
# print(min(numbers))
# print(sum(numbers))
# print(sorted(numbers, reverse=True))

# numbers = [1,2,3]
# result = map(str, numbers)
# print(result) #<map object at 0x000002A042CB23D0>
# print(list(result)) #['1', '2', '3']

# numbers1 = input().split()
# print(numbers1) #['1', '2', '3']

# numbers2 = list(map(int,input().split()))
# print(numbers2) #[1, 2, 3]

# girls = ['jane', 'ashley']
# boys = ['peter', 'jay']
# pair = zip(girls, boys) 
# print(pair) #<zip object at 0x0000022D7AF5B380>
# print(list(pair)) #[('jane', 'peter'), ('ashley', 'jay')]

# kr_scores = [10,20,30,50]
# math_scores = [20,40,50,70]
# en_scores = [40,20,30,50]
# for student_scores in zip(kr_scores, math_scores, en_scores):
#     print(student_scores)
# '''
# (10, 20, 40)
# (20, 40, 20)
# (30, 50, 30)
# (50, 70, 50)
# '''

# scores = [
#     [10,20,30],
#     [40,50,39],
#     [20,40,50]
# ]
# for score in zip(*scores):
#     print(score)
# '''
# (10, 40, 20)
# (20, 50, 40)
# (30, 39, 50)
# '''

# def func():
#     num = 20
#     print('local', num) #local 20
# func()
# print('global', num) #NameError: name 'num' is not defined

# print(sum) #<built-in function sum>
# print(sum(range(3))) #3
# sum=5
# print(sum) #5
# print(sum(range(3))) #TypeError: 'int' object is not callable = 5range(3)

# a=1
# b=2
# def enclosed():
#     a=10
#     c=3
#     def local(c):
#         print(a,b,c) # 10 2 500

#     local(500)
#     print(a,b,c) # 10 2 3
# enclosed()
# print(a,b) # 1 2

# num = 0
# def increment():
#     #SyntaxError: name 'num' is used prior to global declaration
#     print(num)
#     global num
#     num += 1

# packed_value = 1,2,3,4,5
# print(packed_valuse) # (1,2,3,4,5)

# numbers = [1,2,3,4,5]
# a, *b, c = numbers
# print(a) # 1
# print(b) # [2,3,4]
# print(c) # 5

# print('hello') #hello
# print('you', 'need', 'python') # you need python

# packed_values = 1,2,3,4,5
# a,b,c,d,e = packed_values
# print(a,b,c,d,e) #1 2 3 4 5

# *는 패킹연산자
# def my_function(x,y,z):
#     print(x,y,z)
# names = ['alice','jane','peter']
# my_function(*names) #alice jane peter

# **는 언패킹연산자
# def my_function1(x,y,z):
#     print(x,y,z)
# my_dict = {'x': 1, 'y': 2, 'z': 3}
# my_function1(**my_dict) #1,2,3

# def addition(x, y):
#     return x + y
# result = addition(3,5)
# print(result) # 8

# addition = lambda x, y: x + y
# result = addition
# print(result) # 8

numbers = [1,2,3,4,5]
def square(x):
    return x**2

#lambda 미사용
squared1 = list(map(square, numbers))
print(squared1) #[1, 4, 9, 16, 25]

#lambda 사용
squared2 = list(map(lambda x: x**2, numbers))
print(squared2) #[1, 4, 9, 16, 25]
